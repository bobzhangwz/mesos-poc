---
#  gcr.io/google_containers/etcd:2.0.12

- name: add docker-engine dependency to all
  hosts: all:!localhost
  tasks:
    - name: cp docker repo to add docker engine repo to install latest docker
      sudo: yes
      copy:
        dest: /etc/yum.repos.d/docker.repo
        content: |
          [dockerrepo]
          name=Docker Repository
          baseurl=https://yum.dockerproject.org/repo/main/centos/7
          enabled=1
          gpgcheck=1
          gpgkey=https://yum.dockerproject.org/gpg


- name: install salt stack for salt master
  hosts:
    - saltmaster
  sudo: yes
  vars:
    salt_file_roots: "/srv/salt"
    salt_pillar_roots: "/srv/pillar"
    kube_service_addresses: 10.2.0.0/16
    kube_users:
      kube:
        pass: root
        role: admin
      root:
        pass: root
        role: admin
  roles:
    - salt-master
    - copy-sls
  tasks:
    # - name: fix bug | set docker-io to docker engine
    #   replace:
    #     dest: "{{salt_file_roots}}/docker/init.sls"
    #     regexp: 'docker-io'
    #     replace: 'docker-engine'
    #     backup: yes

    # - name: fix bug | enable docker and kubelet
    #   replace:
    #     dest: "{{salt_file_roots}}/top.sls"
    #     regexp: if grains\['cloud'\] is defined and grains\['cloud'\] in \[ 'vagrant', 'gce', 'aws' \]
    #     replace: "if true"

    # - name: fix bug | replace
    #   replace:
    #     dest: "{{salt_file_roots}}/kubelet/default"
    #     regexp: "{{item.reg}}"
    #     replace: "{{item.replace}}"
    #   with_items:
    #     - reg: grains\.cloud
    #       replace: "grains['cloud']"

    #     - reg: grains\.kubelet_api_servers
    #       replace: "grains['kubelet_api_servers']"

    #     - reg: grains\.get\(\'cbr-cidr\'\)
    #       replace: "grains['cbr-cidr'] is defined"

    # - name: add some pillar for run salt-stack
    #   lineinfile :
    #     dest: "{{salt_pillar_roots}}/cluster-params.sls"
    #     line: "{{item.key}}: {{item.value}}"
    #     state: present
    #   with_items:
    #     - key: cert_ip
    #       value: "{{inventory_hostname}}"
    #     - key: service_cluster_ip_range
    #       value: "{{kube_service_addresses}}"

    # - name: populate users for basic auth in API
    #   sudo: yes
    #   lineinfile:
    #     dest: "{{ salt_file_roots }}/kube-apiserver/basic_auth.csv"
    #     create: yes
    #     line: '{{ item.value.pass }},{{ item.key }},{{ item.value.role }}'
    #   with_dict: "{{ kube_users }}"

    # - name: create empty known_tokens.csv, TODO add script to generate tokens
    #   copy: content="" dest={{ salt_file_roots }}/kube-apiserver/known_tokens.csv force=no

    # - name: restart salt master
    #   service: name=salt-master state=restarted

- name: install salt stack for salt minion
  sudo: yes
  serial: 1
  hosts:
    - slave
    - master
    - saltmaster
  vars:
    saltmaster: "{{groups['saltmaster'][0]}}"
  roles:
    - salt-minion

- name: set grains for k8s master
  sudo: yes
  hosts: master
  roles:
    - copy-sls
  tasks:
    - name: set the grains of k8s master
      copy:
        dest: /etc/salt/grains
        content: |
          etcd_servers: {{groups['master'][0]}}
          cloud_provider: vagrant
          cloud: vagrant
          cbr-cidr: ""
          roles:
            - kubernetes-master

    - name: restart salt minion
      service: name=salt-minion state=restarted

- name: set grains for k8s minion
  sudo: yes
  hosts: slave
  tasks:
    - name: set the grains of minion
      copy:
        dest: /etc/salt/grains
        content: |
          etcd_servers: {{groups['master'][0]}}
          cloud_provider: vagrant
          cbr-cidr: ""
          cloud: vagrant
          api_servers: {{groups['master'][0]}}
          roles:
            - kubernetes-pool

    - name: restart salt minion
      service: name=salt-minion state=restarted
