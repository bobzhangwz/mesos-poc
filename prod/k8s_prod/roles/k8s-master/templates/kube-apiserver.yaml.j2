apiVersion: v1
kind: Pod
metadata:
  name: kube-apiserver
  namespace: kube-system
spec:
  hostNetwork: true
  containers:
  - name: kube-apiserver
    image: "{{hyperkube_image}}"
    command:
    - /hyperkube
    - apiserver
    - --bind-address=0.0.0.0
    - --etcd_servers={{etcd_servers}}
    - --secure-port={{ kube_master_port }}
    - --insecure-port={{ kube_insecure_port }}
    - --admission_control=NamespaceLifecycle,NamespaceExists,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota
    - --service-cluster-ip-range={{ kube_service_addresses }}
    - --tls_cert_file={{ kube_cert_dir }}/server.crt
    - --tls_private_key_file={{ kube_cert_dir }}/server.key
    - --client_ca_file={{ kube_cert_dir }}/ca.crt
    - --token_auth_file={{ kube_token_dir }}/known_tokens.csv
    - --basic-auth-file={{ kube_users_dir }}/known_users.csv
    - --service_account_key_file={{ kube_cert_dir }}/server.crt
    - --cluster-name={{cluster_name}}
    - --advertise-address={{private_ipv4}}
    - --v=2
    - --allow-privileged=true
    ports:
    - containerPort: {{kube_master_port}}
      hostPort: {{kube_master_port}}
      name: https
    - containerPort: {{kube_insecure_port}}
      hostPort: {{kube_insecure_port}}
      name: http
    volumeMounts:
    - mountPath: {{ kube_config_dir }}
      name: srvkube
      readOnly: true
    - mountPath: {{ kube_log_dir }}
      name: logfile
  volumes:
  - hostPath:
      path: {{ kube_config_dir }}
    name: srvkube
  - hostPath:
      path: {{ kube_log_dir }}
    name: logfile
